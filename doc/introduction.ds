Wallapatta is like
<<http://en.wikipedia.org/wiki/Markdown(Markdown)>>, but has a layout
inspired by handouts of Edward R. Tufte^^1^^.

 >>>
  ^^1^^ <<http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0000hB
  (Book design: advice and examples - edwardtufte.com)>>

 <<<
  <a class="github-button" href="https://github.com/vpj/wallapatta" data-icon="octicon-star" data-style="mega">Star</a>
  <script async defer id="github-bjs" src="https://buttons.github.io/buttons.js"></script>

##Introduction

 Wallapatta uses indentation to specify the hierarchy of content.

 ```
  ###Heading 1

   Introduction

   * Point one

    Description about point one

   ####Subtopic

    Subtopic content

   This belongs to Heading 1

 >>>
  ###Heading 1

   Introduction

   * Point one

    Description about point one

   ####Subtopic

    Subtopic content

   This belongs to Heading 1

 Indentation is required for specifying content for components like lists, code blocks, special blocks, etc.

 It also helps while working with large documents because **code folding** can be used with Wallapatta. The hierarchy of content is important for **printing** as well- to indentify where to break pages.

 **Side notes** is another key feature of Wallapatta. You can have text, lists, links, HTML content, as well as images, in side notes.

 >>>
  <<<
   <a href="https://twitter.com/share" class="twitter-share-button" data-via="vpj" data-size="large">Tweet</a>
   <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>

  --**Tweet** button in a side note

 Some of the sytaxes of Wallapatta are different from Markdown; for instance, ``<<`` and ``>>`` are used for links instead of ``[]()``.

 <<reference.html(Read the Wallapatta reference)>> for a details on the syntax.

##Get Started

 ###Chrome app
  Download the <<https://chrome.google.com/webstore/detail/wallapatta/nleponjjojkllonfamfjhebhadibjlip(Chrome App)>> to write documents in wallapatta. It also lets you create printable documents (with smart page breaks).

  Here's the <<http://vpj.github.io/wallapatta/chrome.html(Chrome App Documentation)>>.

 ###Compile a book, blog or a page

  ####Installing CLI

   ```
    npm install -g wallapatta


  ####Compiling a book (HTML book)

   ```
    wallapatta --book book.yaml --output build --static

   Enter ``wallapatta`` to see the command line usage help.

   This documentation is written from Wallapatta. You can see the source and a sample ``book.yaml`` <<https://github.com/vpj/wallapatta/tree/master/doc(Github>>

  ####Generating a static blog

   ```
    wallapatta --blog blog.yaml --output blog --static

   This <<http://vpj.github.io/wallapatta.html(blog post)>> shows how to create a
   static blog with wallapatta. <<http://vpj.github.io(My blog)>> is based on wallapatta.